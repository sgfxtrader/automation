#!/bin/bash
clear
printf "Build Script written by Francis Nai on 15 May 2019\n"
printf "Email me at francis.nai@sap.com if you have any feedback\n"
printf "####################################################################################################\n"
printf "This script $0 is run by $USER on $OSTYPE with $SHELL at $PWD\n"
printf "Start creating infrastructure assets on Azure on $HOSTNAME\n"
printf "####################################################################################################\n\n"

b="${1,,}"

# Array for Subnet (sub) 
# Column 1 is Subnet Name
# Column 2 is Subnet IP
# Column 3 is Subnet NSG
# Column 4 is NSG Rule Name
# Column 5 is NSG Port
# Column 6 is NSG Priority
# Column 7-9 will be 2nd set of NSG rule
# Column 10-12 will be 3rd set of NSG rule

declare -A sub
num_rows=30
num_columns=12

# Array for Virtual Machine (vlm) 
# Column 1 is Virtual Machine name
# Column 2 is Virtual Machine Image
# Column 3 is Virtual Machine Size
# Column 4 is Virtual Machine Username
# Column 5 is Virtual Machine Password
# Column 6 is Virtual Machine IP
# Column 7 is Virtual Machine FQDN
# Column 8 is Virtual Machine Public IP SKU

declare -A vlm
num_rows=30
num_columns=8


if [ -z "$b" ] || [ -z "$2" ]; then
    printf "Correct Usage:\n"
    printf "$0 <azure resource group> <azure region>\n"
    printf "Example: $0 myResourceGroup 'South East Asia'\n\n"
else
    # Create a resource group.
    printf "\n$2 Azure> $b rg...\n"
    az group create --name $b --location "$2"

    # Create Vnet
    vnetN=vnet$b
    vnetIP=192.168.0.0/16
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP...\n\n"
    az network vnet create --name $vnetN --resource-group $b --address-prefixes $vnetIP

    # Create NSG
    sub[1,3]=nsgone$b
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[1,3]} nsg...\n\n"
    az network nsg create -g $b -n ${sub[1,3]}

    sub[2,3]=nsgtwo$b
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[2,3]} nsg...\n\n"
    az network nsg create -g $b -n ${sub[2,3]}

    sub[3,3]=nsgag$b
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[3,3]} nsg...\n\n"
    az network nsg create -g $b -n ${sub[3,3]}


    # Create Subnet
    sub[1,1]=subone$b
    sub[1,2]=192.168.5.0/24
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[1,1]} ${sub[1,2]}> ${sub[1,3]} nsg...\n\n"
    az network vnet subnet create --resource-group $b --vnet-name $vnetN --name ${sub[1,1]} \
        --address-prefixes ${sub[1,2]} --network-security-group ${sub[1,3]}

    sub[2,1]=subtwo$b
    sub[2,2]=192.168.6.0/24
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[2,1]} ${sub[2,2]}> ${sub[2,3]} nsg...\n\n"
    az network vnet subnet create --resource-group $b --vnet-name $vnetN --name ${sub[2,1]} \
        --address-prefixes ${sub[2,2]} --network-security-group ${sub[2,3]}

    sub[3,1]=subapg$b
    sub[3,2]=192.168.1.0/24
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[3,1]} ${sub[3,2]}> ${sub[3,3]} nsg...\n\n"
    az network vnet subnet create --resource-group $b --vnet-name $vnetN --name ${sub[3,1]} \
        --address-prefixes ${sub[3,2]} --network-security-group ${sub[3,3]}


    # Create Application Gateway
    sub[3,7]=192.168.1.100
    sub[3,8]=agip$b
    sub[3,9]=apgw$b
    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[3,8]}\n\n"
    az network public-ip create --resource-group $b --name ${sub[3,8]} --dns-name apg$b

    az network application-gateway create   --name ${sub[3,9]} \
                                            --location "$2" \
                                            --resource-group $b \
                                            --vnet-name $vnetN \
                                            --subnet ${sub[3,1]} \
                                            --capacity 2 \
                                            --sku Standard_Medium \
                                            --http-settings-cookie-based-affinity Disabled \
                                            --frontend-port 80 \
                                            --http-settings-port 80 \
                                            --http-settings-protocol Http \
                                            --public-ip-address ${sub[3,8]} \
                                            --private-ip-address ${sub[3,7]}

    # Create VM Linux
    vlm[1,1]=vm${sub[1,1]}
    vlm[1,2]=ubuntults
    vlm[1,3]=Standard_B1s
    vlm[1,4]=sapfx$b
    vlm[1,5]="Sap999@333@"$b
    vlm[1,6]=192.168.5.4
    vlm[1,7]=oneweb$b
    vlm[1,8]=Basic

    vlm[2,1]=vm${sub[2,1]}
    vlm[2,2]=ubuntults
    vlm[2,3]=Standard_B1s
    vlm[2,4]=sapfx$b
    vlm[2,5]="Sap999@333@"$b
    vlm[2,6]=192.168.6.4
    vlm[2,7]=twoweb$b
    vlm[2,8]=Basic


    sed 's/example.com/'${vlm[1,7]}.southeastasia.cloudapp.azure.com'/g' cloud-nginx1.txt >> cloud-init-nginx1.txt

    sed 's/example.com/'${vlm[2,7]}.southeastasia.cloudapp.azure.com'/g' cloud-nginx2.txt >> cloud-init-nginx2.txt

    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[1,1]} ${sub[1,2]}> ${sub[1,3]} nsg> ${vlm[1,1]} ${vlm[1,2]} ${vlm[1,6]}...\n\n"

    az vm create --name ${vlm[1,1]} \
                --resource-group $b \
                --image ${vlm[1,2]} \
                --size ${vlm[1,3]} \
                --admin-username ${vlm[1,4]} \
                --admin-password ${vlm[1,5]} \
                --authentication-type all \
                --vnet-name $vnetN \
                --private-ip-address ${vlm[1,6]} \
                --subnet ${sub[1,1]} \
                --nsg ${sub[1,3]} \
                --custom-data cloud-init-nginx1.txt


    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[2,1]} ${sub[2,2]}> ${sub[2,3]} nsg> ${vlm[2,1]} ${vlm[2,2]} ${vlm[2,6]}...\n\n"

    az vm create --name ${vlm[2,1]} \
                --resource-group $b \
                --image ${vlm[2,2]} \
                --size ${vlm[2,3]} \
                --admin-username ${vlm[2,4]} \
                --admin-password ${vlm[2,5]} \
                --authentication-type all \
                --vnet-name $vnetN \
                --private-ip-address ${vlm[2,6]} \
                --subnet ${sub[2,1]} \
                --nsg ${sub[2,3]} \
                --custom-data cloud-init-nginx2.txt


    # Create NSG rule
    # Turn on Port 80 at NSG
    sub[1,4]=HTTP
    sub[1,5]=80
    sub[1,6]=$(( RANDOM % (1000 - 100 + 1 ) + 100 ))

    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[1,1]} ${sub[1,2]}> ${sub[1,3]} nsg> ${sub[1,4]} ${sub[1,5]}> ${sub[1,6]} priority> ${vlm[1,1]} ${vlm[1,2]} ${vlm[1,6]}\n\n"
    az network nsg rule create --name ${sub[1,4]} --nsg-name ${sub[1,3]} --resource-group $b --access Allow \
        --protocol Tcp --direction Inbound --source-address-prefixes '*' --destination-port-ranges ${sub[1,5]} \
        --priority ${sub[1,6]}
    
    sub[2,4]=HTTP
    sub[2,5]=80
    sub[2,6]=$(( RANDOM % (1000 - 100 + 1 ) + 100 ))

    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[2,1]} ${sub[2,2]}> ${sub[2,3]} nsg> ${sub[2,4]} ${sub[2,5]}> ${sub[2,6]} priority> ${vlm[2,1]} ${vlm[2,2]} ${vlm[2,6]}\n\n"
    az network nsg rule create --name ${sub[2,4]} --nsg-name ${sub[2,3]} --resource-group $b --access Allow \
        --protocol Tcp --direction Inbound --source-address-prefixes '*' --destination-port-ranges ${sub[2,5]} \
        --priority ${sub[2,6]}

    sub[3,4]=HTTP
    sub[3,5]=80
    sub[3,6]=$(( RANDOM % (1000 - 100 + 1 ) + 100 ))

    printf "\n$2 Azure> $b rg> $vnetN vnet> $vnetIP> ${sub[3,1]} ${sub[3,2]}> ${sub[3,3]} nsg> ${sub[3,4]} ${sub[3,5]}> ${sub[3,6]} priority> ${sub[3,7]}\n\n"
    az network nsg rule create --name ${sub[3,4]} --nsg-name ${sub[3,3]} --resource-group $b --access Allow \
        --protocol Tcp --direction Inbound --source-address-prefixes '*' --destination-port-ranges ${sub[3,5]} \
        --priority ${sub[3,6]}

    # Create AG Backend Pool and update the rule
    sub[3,10]=apgwback$b
    az network application-gateway address-pool create -g $b --gateway-name ${sub[3,9]} -n ${sub[3,10]} --servers ${vlm[1,6]} ${vlm[2,6]} 
    az network application-gateway rule update --resource-group $b --name "rule1" --gateway-name ${sub[3,9]} --address-pool ${sub[3,10]}

    printf "\nFQDN for ${sub[3,8]} application gateway\n"
    az network public-ip show --resource-group $b --name ${sub[3,8]} --query [dnsSettings.fqdn] --output tsv

    rm cloud-init-nginx1.txt
    rm cloud-init-nginx2.txt
    
    printf "\n\n If you like this script, please do not forget to like my post and endorse my skills in Linkedin. Thank you!\n"
    printf " https://www.linkedin.com/in/francis-nai-7454383/  \n\n"
fi
